
slave_back = 'slave2'

pipeline {
    agent none
    options {
      gitLabConnection('gitlab-connection')
    }

    stages {
        stage("Android build & deploy + Spring CI") {
            parallel{
                stage('only back for android'){
                    when{
                        branch 'back';
                    }
                    steps{
                        updateGitlabCommitStatus name: 'build', state: 'running'
                        node(slave_front){
                            echo "${env.BRANCH_NAME} ->  Android running"
                            build(
                                job: "POD-Android-pipeline", 
                                parameters: [string(name:"BRANCH_NAME", value:"${env.BRANCH_NAME}")]
                            )
                        }
                    }
                }
                
                stage('only back for all service'){
                    when{
                        branch 'back';
                    }
                    steps{
                        updateGitlabCommitStatus name: 'build', state: 'running'
                        node(slave_back){
                            echo "${env.BRANCH_NAME} ->  spring CI running"
                            build(
                                job: "POD-CI-Pipeline-AWS", 
                                parameters: [string(name:"BRANCH_NAME", value:"${env.BRANCH_NAME}")]
                            )
                        }
                    }
                }
                stage('maryfarm-board-service'){
                    when{
                        branch 'maryfarm-board-service'
                    }
                    steps {
                        updateGitlabCommitStatus name: 'build', state: 'running'
                        node(slave_back){
                            build(
                                job: "POD-CI-Pipeline-AWS", 
                                parameters: [string(name:"BRANCH_NAME", value:"${env.BRANCH_NAME}")]
                            )
                        }
                    }

                }
                stage("maryfarm-calendar-service") {
                    when{
                        branch 'maryfarm-calendar-service'
                    }
                    steps{
                        updateGitlabCommitStatus name: 'build', state: 'running'
                        node(slave_back){
                            build(
                                job: "POD-CI-Pipeline-AWS", 
                                parameters: [string(name:"BRANCH_NAME", value:"${env.BRANCH_NAME}")]
                            )
                        }
                    }

                }
                stage("maryfarm-chat-service") {
                    when{
                        branch 'maryfarm-chat-service'
                    }
                    steps{
                        updateGitlabCommitStatus name: 'build', state: 'running'
                        node(slave_back){
                            build(
                                job: "POD-CI-Pipeline-AWS", 
                                parameters: [string(name:"BRANCH_NAME", value:"${env.BRANCH_NAME}")]
                            )
                        }
                    }
                }
                stage("maryfarm-notify-service") {
                    when{
                        branch 'maryfarm-notify-service'
                    }
                    steps{
                        updateGitlabCommitStatus name: 'build', state: 'running'
                        node(slave_back){
                            build(
                                job: "POD-CI-Pipeline-AWS", 
                                parameters: [string(name:"BRANCH_NAME", value:"${env.BRANCH_NAME}")]
                            )
                        }
                    }
                }
                stage("maryfarm-plant-service") {
                    when{
                        branch 'maryfarm-plant-service'
                    }
                    steps{
                        updateGitlabCommitStatus name: 'build', state: 'running'
                        node(slave_back){
                            build(
                                job: "POD-CI-Pipeline-AWS", 
                                parameters: [string(name:"BRANCH_NAME", value:"${env.BRANCH_NAME}")]
                            )
                        }
                    }
                }
                stage("maryfarm-user-service") {
                    when{
                        branch 'maryfarm-user-service'
                    }
                    steps{
                        updateGitlabCommitStatus name: 'build', state: 'running'
                        node(slave_back){
                            build(
                                job: "POD-CI-Pipeline-AWS", 
                                parameters: [string(name:"BRANCH_NAME", value:"${env.BRANCH_NAME}")]
                            )
                        }
                    }
                }
                stage("maryfarm-consumer-service") {
                    when{
                        branch 'maryfarm-consumer-service'
                    }
                    steps{
                        updateGitlabCommitStatus name: 'build', state: 'running'
                        node(slave_back){
                            build(
                                job: "POD-CI-Pipeline-AWS", 
                                parameters: [string(name:"BRANCH_NAME", value:"${env.BRANCH_NAME}")]
                            )
                        }
                    }
                }
            }
        }
        stage("Spring CD") {
            parallel{
                stage('only back for infra'){
                    when{
                        branch 'back';
                    }
                    steps{
                        updateGitlabCommitStatus name: 'build', state: 'running'
                        node(slave_back){
                            echo "${env.BRANCH_NAME} ->  spring CD running"
                            build(
                                job: "POD-CD-Pipeline-AWS", 
                                parameters: [string(name:"BRANCH_NAME", value:"${env.BRANCH_NAME}")]
                            )
                        }
                    }
                }
                stage('maryfarm-board-service'){
                    when{
                        branch 'maryfarm-board-service'
                    }
                    steps{
                        updateGitlabCommitStatus name: 'build', state: 'running'
                        node(slave_back){
                            build(
                                job: "POD-CD-Pipeline-AWS", 
                                parameters: [string(name:"BRANCH_NAME", value:"${env.BRANCH_NAME}")]
                            )
                        }
                    }

                }
                stage("maryfarm-calendar-service") {
                    when{
                        branch 'maryfarm-calendar-service'
                    }
                    steps{
                        updateGitlabCommitStatus name: 'build', state: 'running'
                        node(slave_back){
                            build(
                                job: "POD-CD-Pipeline-AWS", 
                                parameters: [string(name:"BRANCH_NAME", value:"${env.BRANCH_NAME}")]
                            )
                        }
                    }

                }
                stage("maryfarm-chat-service") {
                    when{
                        branch 'maryfarm-chat-service'
                    }
                    steps{
                        updateGitlabCommitStatus name: 'build', state: 'running'
                        node(slave_back){
                            build(
                                job: "POD-CD-Pipeline-AWS", 
                                parameters: [string(name:"BRANCH_NAME", value:"${env.BRANCH_NAME}")]
                            )
                        }
                    }

                }
                stage("maryfarm-notify-service") {
                    when{
                        branch 'maryfarm-notify-service'
                    }
                    steps{
                        updateGitlabCommitStatus name: 'build', state: 'running'
                        node(slave_back){
                            build(
                                job: "POD-CD-Pipeline-AWS", 
                                parameters: [string(name:"BRANCH_NAME", value:"${env.BRANCH_NAME}")]
                            )
                        }
                    }

                }
                stage("maryfarm-plant-service") {
                    when{
                        branch 'maryfarm-plant-service'
                    }
                    steps{
                        updateGitlabCommitStatus name: 'build', state: 'running'
                        node(slave_back){
                            build(
                                job: "POD-CD-Pipeline-AWS", 
                                parameters: [string(name:"BRANCH_NAME", value:"${env.BRANCH_NAME}")]
                            )
                        }
                    }

                }
                stage("maryfarm-user-service") {
                    when{
                        branch 'maryfarm-user-service'
                    }
                    steps{
                        updateGitlabCommitStatus name: 'build', state: 'running'
                        node(slave_back){
                            build(
                                job: "POD-CD-Pipeline-AWS", 
                                parameters: [string(name:"BRANCH_NAME", value:"${env.BRANCH_NAME}")]
                            )
                        }
                    }

                }
                stage("maryfarm-consumer-service") {
                    when{
                        branch 'maryfarm-consumer-service'
                    }
                    steps{
                        updateGitlabCommitStatus name: 'build', state: 'running'
                        node(slave_back){
                            build(
                                job: "POD-CD-Pipeline-AWS", 
                                parameters: [string(name:"BRANCH_NAME", value:"${env.BRANCH_NAME}")]
                            )
                        }
                    }
                }
            }
        }
    }
    post {
      failure {
        updateGitlabCommitStatus name: 'build', state: 'failed'
      }
      success {
        updateGitlabCommitStatus name: 'build', state: 'success'
      }
      aborted {
        updateGitlabCommitStatus name: 'build', state: 'canceled'
      }
    }
}