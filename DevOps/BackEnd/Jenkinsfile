
slave_back = 'slave2'

pipeline {
    agent none
    options {
        timestamps()
        gitLabConnection('gitlab-connection')
        gitlabCommitStatus(name: 'Spring')
        gitlabBuilds(builds: ['Build', 'Deploy'])
    }
    triggers {
        gitlab(
            triggerOnPush: false,
            triggerOnMergeRequest: true, 
            triggerOpenMergeRequestOnPush: "source",
            skipWorkInProgressMergeRequest: true,
            ciSkip: true,
            setBuildDescription: true,
            addNoteOnMergeRequest: true,
            addCiMessage: true,
            addVoteOnMergeRequest: true,
            acceptMergeRequestOnSuccess: false,
            branchFilterType: "NameBasedFilter",
            includeBranchesSpec: "dev, test, back",
            excludeBranchesSpec: "",
            pendingBuildName: "Spring",
            cancelPendingBuildsOnUpdate: true
        )
    }

    stages {
        stage("Build") {
            parallel{
                stage('master'){
                    when{
                        branch 'master';
<<<<<<< HEAD
<<<<<<<< HEAD:DevOps/BackEnd/Jenkinsfile
                    }
                    steps{
                        updateGitlabCommitStatus name: 'master', state: 'running'
                        node(slave_back){
========
                    }
                    steps{
                        updateGitlabCommitStatus name: 'build', state: 'running'
                        node(slave_front){
                            echo "${env.BRANCH_NAME} ->  Android running"
                            build(
                                job: "POD-Android-pipeline", 
                                parameters: [string(name:"BRANCH_NAME", value:"${env.BRANCH_NAME}")]
                            )
                        }
                    }
                }
                
                stage('only master for all service'){
                    when{
                        branch 'master';
                    }
                    steps{
                        updateGitlabCommitStatus name: 'build', state: 'running'
                        node(slave_back){
                            echo "${env.BRANCH_NAME} ->  spring CI running"
>>>>>>>> maryfarm-plant-service:DevOps/Jenkinsfile
=======
                    }
                    steps{
                        updateGitlabCommitStatus name: 'master', state: 'running'
                        node(slave_back){
>>>>>>> maryfarm-board-service
                            build(
                                job: "POD-CI-Pipeline-AWS", 
                                parameters: [string(name:"BRANCH_NAME", value:"${env.BRANCH_NAME}")]
                            )
                        }
                    }
                }
                stage('maryfarm-board-service'){
                    when{
                        branch 'maryfarm-board-service'
                    }
                    steps {
<<<<<<< HEAD
<<<<<<<< HEAD:DevOps/BackEnd/Jenkinsfile
                        updateGitlabCommitStatus name: 'maryfarm-board-service', state: 'running'
========
                        updateGitlabCommitStatus name: 'build', state: 'running'
>>>>>>>> maryfarm-plant-service:DevOps/Jenkinsfile
=======
                        updateGitlabCommitStatus name: 'maryfarm-board-service', state: 'running'
>>>>>>> maryfarm-board-service
                        node(slave_back){
                            build(
                                job: "POD-CI-Pipeline-AWS", 
                                parameters: [string(name:"BRANCH_NAME", value:"${env.BRANCH_NAME}")]
                            )
                        }
                    }

                }
                stage("maryfarm-calendar-service") {
                    when{
                        branch 'maryfarm-calendar-service'
                    }
                    steps{
<<<<<<< HEAD
<<<<<<<< HEAD:DevOps/BackEnd/Jenkinsfile
                        updateGitlabCommitStatus name: 'maryfarm-calendar-service', state: 'running'
========
                        updateGitlabCommitStatus name: 'build', state: 'running'
>>>>>>>> maryfarm-plant-service:DevOps/Jenkinsfile
=======
                        updateGitlabCommitStatus name: 'maryfarm-calendar-service', state: 'running'
>>>>>>> maryfarm-board-service
                        node(slave_back){
                            build(
                                job: "POD-CI-Pipeline-AWS", 
                                parameters: [string(name:"BRANCH_NAME", value:"${env.BRANCH_NAME}")]
                            )
                        }
                    }

                }
                stage("maryfarm-chat-service") {
                    when{
                        branch 'maryfarm-chat-service'
                    }
                    steps{
<<<<<<< HEAD
<<<<<<<< HEAD:DevOps/BackEnd/Jenkinsfile
                        updateGitlabCommitStatus name: 'maryfarm-chat-service', state: 'running'
========
                        updateGitlabCommitStatus name: 'build', state: 'running'
>>>>>>>> maryfarm-plant-service:DevOps/Jenkinsfile
=======
                        updateGitlabCommitStatus name: 'maryfarm-chat-service', state: 'running'
>>>>>>> maryfarm-board-service
                        node(slave_back){
                            build(
                                job: "POD-CI-Pipeline-AWS", 
                                parameters: [string(name:"BRANCH_NAME", value:"${env.BRANCH_NAME}")]
                            )
                        }
                    }
                }
                stage("maryfarm-notify-service") {
                    when{
                        branch 'maryfarm-notify-service'
                    }
                    steps{
<<<<<<< HEAD
<<<<<<<< HEAD:DevOps/BackEnd/Jenkinsfile
                        updateGitlabCommitStatus name: 'maryfarm-notify-service', state: 'running'
========
                        updateGitlabCommitStatus name: 'build', state: 'running'
>>>>>>>> maryfarm-plant-service:DevOps/Jenkinsfile
=======
                        updateGitlabCommitStatus name: 'maryfarm-notify-service', state: 'running'
>>>>>>> maryfarm-board-service
                        node(slave_back){
                            build(
                                job: "POD-CI-Pipeline-AWS", 
                                parameters: [string(name:"BRANCH_NAME", value:"${env.BRANCH_NAME}")]
                            )
                        }
                    }
                }
                stage("maryfarm-plant-service") {
                    when{
                        branch 'maryfarm-plant-service'
                    }
                    steps{
<<<<<<< HEAD
<<<<<<<< HEAD:DevOps/BackEnd/Jenkinsfile
                        updateGitlabCommitStatus name: 'maryfarm-plant-service', state: 'running'
========
                        updateGitlabCommitStatus name: 'build', state: 'running'
>>>>>>>> maryfarm-plant-service:DevOps/Jenkinsfile
=======
                        updateGitlabCommitStatus name: 'maryfarm-plant-service', state: 'running'
>>>>>>> maryfarm-board-service
                        node(slave_back){
                            build(
                                job: "POD-CI-Pipeline-AWS", 
                                parameters: [string(name:"BRANCH_NAME", value:"${env.BRANCH_NAME}")]
                            )
                        }
                    }
                }
                stage("maryfarm-user-service") {
                    when{
                        branch 'maryfarm-user-service'
                    }
                    steps{
<<<<<<< HEAD
<<<<<<<< HEAD:DevOps/BackEnd/Jenkinsfile
                        updateGitlabCommitStatus name: 'maryfarm-user-service', state: 'running'
========
                        updateGitlabCommitStatus name: 'build', state: 'running'
>>>>>>>> maryfarm-plant-service:DevOps/Jenkinsfile
=======
                        updateGitlabCommitStatus name: 'maryfarm-user-service', state: 'running'
>>>>>>> maryfarm-board-service
                        node(slave_back){
                            build(
                                job: "POD-CI-Pipeline-AWS", 
                                parameters: [string(name:"BRANCH_NAME", value:"${env.BRANCH_NAME}")]
                            )
                        }
                    }
                }
                stage("maryfarm-consumer-service") {
                    when{
                        branch 'maryfarm-consumer-service'
                    }
                    steps{
<<<<<<< HEAD
<<<<<<<< HEAD:DevOps/BackEnd/Jenkinsfile
                        updateGitlabCommitStatus name: 'maryfarm-consumer-service', state: 'running'
========
                        updateGitlabCommitStatus name: 'build', state: 'running'
>>>>>>>> maryfarm-plant-service:DevOps/Jenkinsfile
=======
                        updateGitlabCommitStatus name: 'maryfarm-consumer-service', state: 'running'
>>>>>>> maryfarm-board-service
                        node(slave_back){
                            build(
                                job: "POD-CI-Pipeline-AWS", 
                                parameters: [string(name:"BRANCH_NAME", value:"${env.BRANCH_NAME}")]
                            )
                        }
                    }
                }
            }
        }
        stage("Deploy") {
            parallel{
                stage('master'){
                    when{
                        branch 'master';
                    }
                    steps{
<<<<<<< HEAD
<<<<<<<< HEAD:DevOps/BackEnd/Jenkinsfile
                        updateGitlabCommitStatus name: 'master', state: 'running'
                        node(slave_back){
========
                        updateGitlabCommitStatus name: 'build', state: 'running'
                        node(slave_back){
                            echo "${env.BRANCH_NAME} ->  spring CD running"
>>>>>>>> maryfarm-plant-service:DevOps/Jenkinsfile
=======
                        updateGitlabCommitStatus name: 'master', state: 'running'
                        node(slave_back){
>>>>>>> maryfarm-board-service
                            build(
                                job: "POD-CD-Pipeline-AWS", 
                                parameters: [string(name:"BRANCH_NAME", value:"${env.BRANCH_NAME}")]
                            )
                        }
                    }
                }
                stage('maryfarm-board-service'){
                    when{
                        branch 'maryfarm-board-service'
                    }
                    steps{
<<<<<<< HEAD
<<<<<<<< HEAD:DevOps/BackEnd/Jenkinsfile
                        updateGitlabCommitStatus name: 'maryfarm-board-service', state: 'running'
========
                        updateGitlabCommitStatus name: 'build', state: 'running'
>>>>>>>> maryfarm-plant-service:DevOps/Jenkinsfile
=======
                        updateGitlabCommitStatus name: 'maryfarm-board-service', state: 'running'
>>>>>>> maryfarm-board-service
                        node(slave_back){
                            build(
                                job: "POD-CD-Pipeline-AWS", 
                                parameters: [string(name:"BRANCH_NAME", value:"${env.BRANCH_NAME}")]
                            )
                        }
                    }

                }
                stage("maryfarm-calendar-service") {
                    when{
                        branch 'maryfarm-calendar-service'
                    }
                    steps{
<<<<<<< HEAD
<<<<<<<< HEAD:DevOps/BackEnd/Jenkinsfile
                        updateGitlabCommitStatus name: 'maryfarm-calendar-service', state: 'running'
========
                        updateGitlabCommitStatus name: 'build', state: 'running'
>>>>>>>> maryfarm-plant-service:DevOps/Jenkinsfile
=======
                        updateGitlabCommitStatus name: 'maryfarm-calendar-service', state: 'running'
>>>>>>> maryfarm-board-service
                        node(slave_back){
                            build(
                                job: "POD-CD-Pipeline-AWS", 
                                parameters: [string(name:"BRANCH_NAME", value:"${env.BRANCH_NAME}")]
                            )
                        }
                    }

                }
                stage("maryfarm-chat-service") {
                    when{
                        branch 'maryfarm-chat-service'
                    }
                    steps{
<<<<<<< HEAD
<<<<<<<< HEAD:DevOps/BackEnd/Jenkinsfile
                        updateGitlabCommitStatus name: 'maryfarm-chat-service', state: 'running'
========
                        updateGitlabCommitStatus name: 'build', state: 'running'
>>>>>>>> maryfarm-plant-service:DevOps/Jenkinsfile
=======
                        updateGitlabCommitStatus name: 'maryfarm-chat-service', state: 'running'
>>>>>>> maryfarm-board-service
                        node(slave_back){
                            build(
                                job: "POD-CD-Pipeline-AWS", 
                                parameters: [string(name:"BRANCH_NAME", value:"${env.BRANCH_NAME}")]
                            )
                        }
                    }

                }
                stage("maryfarm-notify-service") {
                    when{
                        branch 'maryfarm-notify-service'
                    }
                    steps{
<<<<<<< HEAD
<<<<<<<< HEAD:DevOps/BackEnd/Jenkinsfile
                        updateGitlabCommitStatus name: 'maryfarm-notify-service', state: 'running'
========
                        updateGitlabCommitStatus name: 'build', state: 'running'
>>>>>>>> maryfarm-plant-service:DevOps/Jenkinsfile
=======
                        updateGitlabCommitStatus name: 'maryfarm-notify-service', state: 'running'
>>>>>>> maryfarm-board-service
                        node(slave_back){
                            build(
                                job: "POD-CD-Pipeline-AWS", 
                                parameters: [string(name:"BRANCH_NAME", value:"${env.BRANCH_NAME}")]
                            )
                        }
                    }

                }
                stage("maryfarm-plant-service") {
                    when{
                        branch 'maryfarm-plant-service'
                    }
                    steps{
<<<<<<< HEAD
<<<<<<<< HEAD:DevOps/BackEnd/Jenkinsfile
                        updateGitlabCommitStatus name: 'maryfarm-plant-service', state: 'running'
========
                        updateGitlabCommitStatus name: 'build', state: 'running'
>>>>>>>> maryfarm-plant-service:DevOps/Jenkinsfile
=======
                        updateGitlabCommitStatus name: 'maryfarm-plant-service', state: 'running'
>>>>>>> maryfarm-board-service
                        node(slave_back){
                            build(
                                job: "POD-CD-Pipeline-AWS", 
                                parameters: [string(name:"BRANCH_NAME", value:"${env.BRANCH_NAME}")]
                            )
                        }
                    }

                }
                stage("maryfarm-user-service") {
                    when{
                        branch 'maryfarm-user-service'
                    }
                    steps{
<<<<<<< HEAD
<<<<<<<< HEAD:DevOps/BackEnd/Jenkinsfile
                        updateGitlabCommitStatus name: 'maryfarm-user-service', state: 'running'
========
                        updateGitlabCommitStatus name: 'build', state: 'running'
>>>>>>>> maryfarm-plant-service:DevOps/Jenkinsfile
=======
                        updateGitlabCommitStatus name: 'maryfarm-user-service', state: 'running'
>>>>>>> maryfarm-board-service
                        node(slave_back){
                            build(
                                job: "POD-CD-Pipeline-AWS", 
                                parameters: [string(name:"BRANCH_NAME", value:"${env.BRANCH_NAME}")]
                            )
                        }
                    }

                }
                stage("maryfarm-consumer-service") {
                    when{
                        branch 'maryfarm-consumer-service'
                    }
                    steps{
<<<<<<< HEAD
<<<<<<<< HEAD:DevOps/BackEnd/Jenkinsfile
                        updateGitlabCommitStatus name: 'maryfarm-consumer-service', state: 'running'
========
                        updateGitlabCommitStatus name: 'build', state: 'running'
>>>>>>>> maryfarm-plant-service:DevOps/Jenkinsfile
=======
                        updateGitlabCommitStatus name: 'maryfarm-consumer-service', state: 'running'
>>>>>>> maryfarm-board-service
                        node(slave_back){
                            build(
                                job: "POD-CD-Pipeline-AWS", 
                                parameters: [string(name:"BRANCH_NAME", value:"${env.BRANCH_NAME}")]
                            )
                        }
                    }
                }
            }
        }
    }
    post {
        failure {
            updateGitlabCommitStatus name: 'Spring', state: 'failed'
        }
        success {
            updateGitlabCommitStatus name: 'Spring', state: 'success'
        }
        aborted {
            updateGitlabCommitStatus name: 'Spring', state: 'canceled'
        }
    }
}
