---
- hosts: docker
  remote_user : ubuntu
#   become: true

  tasks:
  # docker run infra container
  # - name: rabbit mq container running
  #   command: docker run -d --name rabbitmq --network maryfarm-network -p 15672:15672 -p 5672:5672 -p 15671:15671 -p 5671:5671 -p 4369:4369 -e RABBITMQ_DEFAULT_USER=guest -e RABBITMQ_DEFAULT_PASS=guest rabbitmq:management
  #   tags: infra
  # - name: mysql container running
  #   command: docker run -d -p 3307:3306 --network maryfarm-network -e MYSQL_ROOT_PASSWORD: 1234 --name mysql jungboke/mysql:0.1
  #   tags: infra
  # - name: rabbit mq container running
  #   command: docker run -d --name rabbitmq --network maryfarm-network -p 15672:15672 -p 5672:5672 -p 15671:15671 -p 5671:5671 -p 4369:4369 -e RABBITMQ_DEFAULT_USER=guest -e RABBITMQ_DEFAULT_PASS=guest rabbitmq:management
  #   tags: infra
  # - name: zipkin container running
  #   command: docker run -d -p 9411:9411 --network maryfarm-network --name zipkin openzipkin/zipkin
  #   tags: infra
  # - name: prometheus container running
  #   command: docker run -d -p 9090:9090 --network maryfarm-network --name prometheus -v /Users/dowonlee/Desktop/Work/springcloud/prometheus-2.25.0.darwin-amd64/prometheus.yml:/etc/prometheus/prometheus.yml prom/prometheus
  #   tags: infra
  # - name: grafana container running
  #   command: docker run -d -p 3000:3000 --network maryfarm-network --name grafana grafana/grafana
  #   tags: infra
 
   

  # remove running containers and images
  - name: stop current running container for config server 
    command: docker stop config-service
    ignore_errors: yes
    tags: remove_containers
  - name: remove stopped cotainer
    command: docker rm config-service -f
    ignore_errors: yes
    tags: remove_containers
  - name: remove current docker image
    command: docker rmi isakggong/config-server:maryfarm-1.0
    ignore_errors: yes
    tags: remove_containers
  - name: stop current running container for discovery server
    command: docker stop discovery-service
    ignore_errors: yes
    tags: remove_containers
  - name: remove stopped cotainer
    command: docker rm discovery-service -f
    ignore_errors: yes
    tags: remove_containers
  - name: remove current docker image
    command: docker rmi isakggong/discovery-server:maryfarm-1.0
    ignore_errors: yes
    tags: remove_containers
  - name: stop current running container for apigateway server
    command: docker stop apigateway-service
    ignore_errors: yes
    tags: remove_containers
  - name: remove stopped cotainer
    command: docker rm apigateway-service -f
    ignore_errors: yes
    tags: remove_containers
  - name: remove current docker image
    command: docker rmi isakggong/apigateway-server:maryfarm-1.0
    ignore_errors: yes
    tags: remove_containers
  - name: stop current running container for notify server
    command: docker stop notify-service
    ignore_errors: yes
    tags: remove_containers
  - name: remove stopped cotainer
    command: docker rm notify-service -f
    ignore_errors: yes
    tags: remove_containers
  - name: remove current docker image
    command: docker rmi isakggong/notify-server:maryfarm-1.0
    ignore_errors: yes
    tags: remove_containers
  - name: stop current running container for user server
    command: docker stop user-service
    ignore_errors: yes
    tags: remove_containers
  - name: remove stopped cotainer
    command: docker rm user-service -f
    ignore_errors: yes
    tags: remove_containers
  - name: remove current docker image
    command: docker rmi isakggong/user-server:maryfarm-1.0
    ignore_errors: yes
    tags: remove_containers
  - name: stop current running container for plant server
    command: docker stop plant-service
    ignore_errors: yes
    tags: remove_containers
  - name: remove stopped cotainer
    command: docker rm plant-service -f
    ignore_errors: yes
    tags: remove_containers
  - name: remove current docker image
    command: docker rmi isakggong/plant-server:maryfarm-1.0
    ignore_errors: yes
    tags: remove_containers
  - name: stop current running container for chat server
    command: docker stop chat-service
    ignore_errors: yes
    tags: remove_containers
  - name: remove stopped cotainer
    command: docker rm chat-service -f
    ignore_errors: yes
    tags: remove_containers
  - name: remove current docker image
    command: docker rmi isakggong/chat-server:maryfarm-1.0
    ignore_errors: yes
    tags: remove_containers
  - name: stop current running container for board server
    command: docker stop board-service
    ignore_errors: yes
    tags: remove_containers
  - name: remove stopped cotainer
    command: docker rm board-service -f
    ignore_errors: yes
    tags: remove_containers
  - name: remove current docker image
    command: docker rmi isakggong/board-server:maryfarm-1.0
    ignore_errors: yes
    tags: remove_containers
  - name: stop current running container for calendar server
    command: docker stop calendar-service
    ignore_errors: yes
    tags: remove_containers
  - name: remove stopped cotainer
    command: docker rm calendar-service -f
    ignore_errors: yes
    tags: remove_containers
  - name: remove current docker image
    command: docker rmi isakggong/calendar-server:maryfarm-1.0
    ignore_errors: yes
    tags: remove_containers
  - name: remove anonymous docker image
    command: docker rmi $(docker images | grep "^<none>" | awk "{print $3}")
    ignore_errors: yes
    tags: remove_containers

  # pull new images
  - name: pull the newest config image from Docker Hub
    command: docker pull isakggong/config-server:maryfarm-1.0
    tags: pull_image
  - name: create a container using config-server image
    command: docker run -d -p 8888:8888 --network maryfarm-network -e "spring.rabbitmq.host=rabbitmq" -e "spring.profiles.active=prod" --name config-service isakggong/config-server:maryfarm-1.0
    tags: run_container
  - name : wait for config server is stable!
    wait_for:
      port: 8888
      delay: 10

  - name: pull the newest discovery image from Docker Hub
    command: docker pull isakggong/discovery-server:maryfarm-1.0
    tags: pull_image
  - name: create a container using discovery-server image
    command: docker run -d -p 8761:8761 --network maryfarm-network -e "spring.cloud.config.uri=http://config-service:8888" -e "spring.rabbitmq.host=rabbitmq" --name discovery-service isakggong/discovery-server:maryfarm-1.0
    tags: run_container
  - name : wait for discovery server is stable!
    wait_for:
      port: 8761
      delay: 10

  - name: pull the newest apigateway image from Docker Hub
    command: docker pull isakggong/apigateway-server:maryfarm-1.0
    tags: pull_image
  - name: create a container using apigateway-server image
    command: docker run -d -p 8000:8000 --network maryfarm-network -e "spring.cloud.config.uri=http://config-service:8888" -e "spring.rabbitmq.host=rabbitmq" -e "eureka.client.serviceUrl.defaultZone=http://discovery-service:8761/eureka/" --name apigateway-service isakggong/apigateway-server:maryfarm-1.0
    tags: run_container
  - name : wait for discovery server is stable!
    wait_for:
      port: 8000
      delay: 10

  - name: pull the newest notify image from Docker Hub
    command: docker pull isakggong/notify-server:maryfarm-1.0
    tags: pull_image
  - name: create a container using notify-server image
    command: docker run -d --network maryfarm-network --name notify-service -e "spring.cloud.config.uri=http://config-service:8888" -e "spring.rabbitmq.host=rabbitmq" -e "eureka.client.serviceUrl.defaultZone=http://discovery-service:8761/eureka/" -e "logging.file=/api-logs/notifys-ws.log" isakggong/notify-server:maryfarm-1.0
    tags: run_container

  - name: pull the newest user image from Docker Hub
    command: docker pull isakggong/user-server:maryfarm-1.0
    tags: pull_image
  - name: create a container using user-server image
    command: docker run -d --network maryfarm-network --name user-service -e "spring.cloud.config.uri=http://config-service:8888" -e "spring.rabbitmq.host=rabbitmq" -e "eureka.client.serviceUrl.defaultZone=http://discovery-service:8761/eureka/" -e "logging.file=/api-logs/users-ws.log" isakggong/user-server:maryfarm-1.0
    tags: run_container

  - name: pull the newest plant image from Docker Hub
    command: docker pull isakggong/plant-server:maryfarm-1.0
    tags: pull_image
  - name: create a container using plant-server image
    command: docker run -d --network maryfarm-network --name plant-service -e "spring.cloud.config.uri=http://config-service:8888" -e "spring.rabbitmq.host=rabbitmq" -e "eureka.client.serviceUrl.defaultZone=http://discovery-service:8761/eureka/" -e "logging.file=/api-logs/plants-ws.log" isakggong/plant-server:maryfarm-1.0
    tags: run_container

  - name: pull the newest chat image from Docker Hub
    command: docker pull isakggong/chat-server:maryfarm-1.0
    tags: pull_image
  - name: create a container using chat-server image
    command: docker run -d --network maryfarm-network --name chat-service -e "spring.cloud.config.uri=http://config-service:8888" -e "spring.rabbitmq.host=rabbitmq" -e "eureka.client.serviceUrl.defaultZone=http://discovery-service:8761/eureka/" -e "logging.file=/api-logs/chats-ws.log" isakggong/chat-server:maryfarm-1.0
    tags: run_container

  - name: pull the newest board image from Docker Hub
    command: docker pull isakggong/board-server:maryfarm-1.0
    tags: pull_image
  - name: create a container using board-server image
    command: docker run -d --network maryfarm-network --name board-service -e "spring.cloud.config.uri=http://config-service:8888"  -e "spring.rabbitmq.host=rabbitmq" -e "eureka.client.serviceUrl.defaultZone=http://discovery-service:8761/eureka/" -e "logging.file=/api-logs/boards-ws.log" isakggong/board-server:maryfarm-1.0
    tags: run_container

  - name: pull the newest calendar image from Docker Hub
    command: docker pull isakggong/calendar-server:maryfarm-1.0
    tags: pull_image
  - name: create a container using calendar-server image
    command: docker run -d --network maryfarm-network --name calendar-service -e "spring.cloud.config.uri=http://config-service:8888" -e "spring.rabbitmq.host=rabbitmq" -e "eureka.client.serviceUrl.defaultZone=http://discovery-service:8761/eureka/" -e "logging.file=/api-logs/calendars-ws.log" isakggong/calendar-server:maryfarm-1.0
    tags: run_container



  # docker run sequentially
  # - name: create a container using config-server image
  #   command: docker run -d -p 8888:8888 --network maryfarm-network -e "spring.rabbitmq.host=rabbitmq" -e "spring.profiles.active=prod" --name config-service isakggong/config-server:maryfarm-1.0
  #   tags: run_container
  # - name: create a container using discovery-server image
  #   command: docker run -d -p 8761:8761 --network maryfarm-network -e "spring.cloud.config.uri=http://config-service:8888" --name discovery-service isakggong/discovery-server:maryfarm-1.0
  #   tags: run_container
  # - name: create a container using apigateway-server image
  #   command: docker run -d -p 8000:8000 --network maryfarm-network -e "spring.cloud.config.uri=http://config-service:8888" -e "spring.rabbitmq.host=rabbitmq" -e "eureka.client.serviceUrl.defaultZone=http://discovery-service:8761/eureka/" --name apigateway-service isakggong/apigateway-server:maryfarm-1.0
  #   tags: run_container
  # - name: create a container using notify-server image
  #   command: docker run -d --network maryfarm-network --name notify-service -e "spring.cloud.config.uri=http://config-service:8888" -e "spring.datasource.url=jdbc:mysql:3307/notifydb?serverTimezone=UTC&characterEncoding=UTF-8" -e "spring.rabbitmq.host=rabbitmq" -e "spring.zipkin.base-url=http://zipkin:9411" -e "eureka.client.serviceUrl.defaultZone=http://discovery-service:8761/eureka/" -e "logging.file=/api-logs/notifys-ws.log" isakggong/notify-server:maryfarm-1.0
  #   tags: run_container
  # - name: create a container using user-server image
  #   command: docker run -d --network maryfarm-network --name user-service -e "spring.cloud.config.uri=http://config-service:8888" -e "spring.datasource.url=jdbc:mysql:3307/userdb?serverTimezone=UTC&characterEncoding=UTF-8" -e "spring.rabbitmq.host=rabbitmq" -e "spring.zipkin.base-url=http://zipkin:9411" -e "eureka.client.serviceUrl.defaultZone=http://discovery-service:8761/eureka/" -e "logging.file=/api-logs/users-ws.log" isakggong/user-server:maryfarm-1.0
  #   tags: run_container
  # - name: create a container using plant-server image
  #   command: docker run -d --network maryfarm-network --name plant-service -e "spring.cloud.config.uri=http://config-service:8888" -e "spring.datasource.url=jdbc:mysql:3307/plantdb?serverTimezone=UTC&characterEncoding=UTF-8" -e "spring.rabbitmq.host=rabbitmq" -e "spring.zipkin.base-url=http://zipkin:9411" -e "eureka.client.serviceUrl.defaultZone=http://discovery-service:8761/eureka/" -e "logging.file=/api-logs/plants-ws.log" isakggong/plant-server:maryfarm-1.0
  #   tags: run_container
  # - name: create a container using chat-server image
  #   command: docker run -d --network maryfarm-network --name chat-service -e "spring.cloud.config.uri=http://config-service:8888" -e "spring.datasource.url=jdbc:mysql:3307/chatdb?serverTimezone=UTC&characterEncoding=UTF-8" -e "spring.rabbitmq.host=rabbitmq" -e "spring.zipkin.base-url=http://zipkin:9411" -e "eureka.client.serviceUrl.defaultZone=http://discovery-service:8761/eureka/" -e "logging.file=/api-logs/chats-ws.log" isakggong/chat-server:maryfarm-1.0
  #   tags: run_container
  # - name: create a container using board-server image
  #   command: docker run -d --network maryfarm-network --name board-service -e "spring.cloud.config.uri=http://config-service:8888" -e "spring.datasource.url=jdbc:mysql:3307/boarddb?serverTimezone=UTC&characterEncoding=UTF-8" -e "spring.rabbitmq.host=rabbitmq" -e "spring.zipkin.base-url=http://zipkin:9411" -e "eureka.client.serviceUrl.defaultZone=http://discovery-service:8761/eureka/" -e "logging.file=/api-logs/boards-ws.log" isakggong/board-server:maryfarm-1.0
  #   tags: run_container
  # - name: create a container using calendar-server image
  #   command: docker run -d --network maryfarm-network --name calendar-service -e "spring.cloud.config.uri=http://config-service:8888" -e "spring.datasource.url=jdbc:mysql:3307/calendardb?serverTimezone=UTC&characterEncoding=UTF-8" -e "spring.rabbitmq.host=rabbitmq" -e "spring.zipkin.base-url=http://zipkin:9411" -e "eureka.client.serviceUrl.defaultZone=http://discovery-service:8761/eureka/" -e "logging.file=/api-logs/calendars-ws.log" isakggong/calendar-server:maryfarm-1.0
  #   tags: run_container










